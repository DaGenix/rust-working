
// #[crate_type = "lib"];

extern mod extra;


mod digest;

pub mod aes;
pub mod aesdangerous;
pub mod aessafe;

#[cfg(target_arch = "x86")]
#[cfg(target_arch = "x86_64")]
pub mod aesni;

pub mod symmetriccipher;
mod blockmodes;
mod cryptoutil;

pub mod util;


fn main() {
    use aes::*;
    use aesdangerous::*;
    use aessafe::*;
    use symmetriccipher::*;

    let key: [u8, ..16] = [1u8, ..16];
    let plain: [u8, ..16] = [2u8, ..16];

    let a = AesSafe128Encryptor::new(key);

    let mut tmp = [0u8, ..16];

    for _ in range(0, 1024 * 1024) {
        a.encrypt_block(plain, tmp);
    }
}
